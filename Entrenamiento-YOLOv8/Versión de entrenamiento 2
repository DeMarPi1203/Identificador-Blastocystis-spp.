import os
from ultralytics import YOLO

# Load a model
model = YOLO("yolov8n.pt")  # build a new model from scratch

# Use the model
results = model.train(data=os.path.join(ROOT_DIR, 'datasetBlastocystis.yaml'), epochs=50, pretrained=True, iou=0.5, visualize=True, patience=0)  # train the model

# Check if results is a boolean value
# If so, then the training might have failed or stopped before completing.
# Print the results to get more information
print(f"Results type: {type(results)}, Results value: {results}")

# If results.keys() does not throw an error, it means it's a dictionary
# and likely contains the metrics you need to plot
if isinstance(results, dict) and "metrics" in results:
    # Access the metrics and plot them
    metrics = results["metrics"]
    metrics.plot()  # Call the plot function on the metrics object

    print(results)

    test_results = model.predict(source='/content/gdrive/MyDrive/ProyectoParasitos/BlastocystisSp/val/images', conf=0.25)
    for result in test_results:
        result.show()
    results["metrics"].save()  # Assuming metrics object has the save method
else:
    print("Training did not complete successfully. Check the logs for more information.")
